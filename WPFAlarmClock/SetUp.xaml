<Window x:Class="WPFAlarmClock.SetUp"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFAlarmClock"
        mc:Ignorable="d"
        x:Name="Setup"
        Title="SetUp" Height="500" Width="1200"
        Style="{DynamicResource WindowStyle2}"
        AllowsTransparency="True" WindowStyle="None" ResizeMode="CanResizeWithGrip">
    <!--WindowChrome.WindowChrome="{DynamicResource WindowChromeKey}"-->
    <Window.Resources>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <StackPanel Orientation="Horizontal">
                                <!--Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"-->
                                <Image x:Name="image" Visibility="Collapsed"></Image>
                                <ContentPresenter Visibility="Collapsed" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="Tag" Value="BtnAdd">
                                <Setter TargetName="image" Property="Source" Value="Image/添加.png"/>
                                <Setter TargetName="image" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="Tag" Value="BtnDel">
                                <Setter TargetName="image" Property="Source" Value="image/齿轮.png"/>
                                <Setter TargetName="image" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="Tag" Value="txt">
                                <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
         <!--完全自定义-->
        <Style x:Key="WindowStyle2" TargetType="{x:Type Window}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome UseAeroCaptionButtons="False" GlassFrameThickness="0" CaptionHeight="30"  />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  >
                            <AdornerDecorator >
                                <ContentPresenter x:Name="win_content" />
                            </AdornerDecorator>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="WindowState" Value="Maximized">
                                <Setter Property="Margin" TargetName="win_content" Value="8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Image Stretch="UniformToFill" Grid.RowSpan="2" Source="SetupBack.png"/>

        <Grid Background="#4C9CFB" Opacity="0.8">
            <Grid Height="30" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                <TextBlock Name="txtTitle" Margin="1,0,0,0"  Padding="5,3,2,3" Text="闹钟设置" FontSize="14" FontFamily="微软雅黑"  Foreground="White"/>
                <StackPanel Orientation="Horizontal" WindowChrome.IsHitTestVisibleInChrome="True" HorizontalAlignment="Right" >
                    <Button Margin="1" Width="24" Height="24" Name="btn_Min" Content="—" ></Button>
                    <Button Margin="1" Width="24" Height="24" Name="btn_Max" Content="☐" ></Button>
                    <Button Margin="1" Width="24" Height="24" Name="btn_Close" Content="✕" ></Button>
                </StackPanel>
            </Grid>
        </Grid>

        <ScrollViewer Grid.Row="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <ListBox x:Name="lbxClock" Background="{x:Null}" Margin="200 5 30 5" BorderBrush="{x:Null}">
                    <local:NewClock x:Name="user1" Margin="0 5 0 0" HorizontalAlignment="Left"/>
                    <local:NewClock Margin="0 5 0 0" HorizontalAlignment="Left"/>
                </ListBox>
                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Width="30" Tag="BtnAdd" Height="30" Click="Btn_Add_Click" Style="{DynamicResource ButtonStyle1}"/>
                    <Button Margin="20 0 0 0" Width="200" Height="30" Content="添加闹钟"  Click="Btn_Add_Click"/>
                </StackPanel>
                
                <Border Grid.Row="2" Height="1" Margin="30 10 30 0" Background="LightGray"></Border>

                <StackPanel Grid.Row="3" Orientation="Horizontal">
                    <TextBlock Text="默认铃声" Height="50" FontSize="36"/>
                    <Button Height="30" Tag="BtnDel" Style="{DynamicResource ButtonStyle1}"/>
                </StackPanel>

                <GridSplitter Grid.Row="3"></GridSplitter>
            </Grid>

        </ScrollViewer>
    </Grid>
</Window>
